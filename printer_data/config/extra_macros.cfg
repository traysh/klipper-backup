[gcode_macro START_PRINT]
gcode:
    EXCLUDE_OBJECT_DEFINE

    {% set MATERIAL_BED_TEMPERATURE_LAYER_0 = params.MATERIAL_BED_TEMPERATURE_LAYER_0|default(70)|float %}
    {% set MATERIAL_STANDBY_TEMPERATURE = params.MATERIAL_STANDBY_TEMPERATURE|default(150)|float %}
    {% set MATERIAL_INITIAL_PRINT_TEMPERATURE = params.MATERIAL_INITIAL_PRINT_TEMPERATURE|default(70)|float %}
    {% set MATERIAL_PRINT_TEMPERATURE_LAYER_0 = params.MATERIAL_PRINT_TEMPERATURE_LAYER_0|default(190)|float %}

    ;;;; Start of my start g-code ;;;;
    M117 Starting
    M107 ; Fan off
    M140 S{MATERIAL_BED_TEMPERATURE_LAYER_0}
    M105 ; report temperature
    M104 S{MATERIAL_STANDBY_TEMPERATURE}
    M105 ; report temperature

    M117 Homing
    G28           ; Home
    M117 Mesh calibration
    BED_MESH_CALIBRATE  ; sem SAVE: mesh só na RAM
    
    M117 Waiting for bed temperature
    M190 S{MATERIAL_BED_TEMPERATURE_LAYER_0}
    M105

    M117 Moving up 30mm
    G1 Z30

    M117 Waiting for hotend temperature
    M109 S{MATERIAL_INITIAL_PRINT_TEMPERATURE}
    M82 ;absolute extrusion mode
    G92 E0 ;Reset Extruder
    M105
    M104 S{MATERIAL_PRINT_TEMPERATURE_LAYER_0}
    
    ;Enable relative extrusion
    M83

    M117 Purging
    LINEAR_PURGE
    M117 Printing


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_RO
gcode:
  CANCEL_PRINT_RO
  M117 Print cancelled


# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[delayed_gcode MONITOR_POWER_DELAYED]
initial_duration: 1
gcode:
  RESPOND PREFIX=monitor MSG="running!"
  
[gcode_macro MONITOR_POWER]
gcode:
  RESPOND MSG="klippy={ printer.webhooks.state }"
  #{% if printer["Ender 5 Plus"].state == "on" %}
  #  FIRMWARE_RESTART
  #  RESPOND PREFIX=monitor MSG="Power ON detectado, executando FIRMWARE_RESTART"
  #  UPDATE_DELAYED_GCODE ID=MONITOR_POWER DURATION=1
  #{% else %}
  #  RESPOND PREFIX=monitor MSG="Nada detectado"
  #  UPDATE_DELAYED_GCODE ID=MONITOR_POWER DURATION=1
  #{% endif %}
